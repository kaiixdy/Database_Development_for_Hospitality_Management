-- ============================================================
-- Watering Hole Dude Ranch SQL Project
-- Purpose: 
-- This script manages data for the Watering Hole Dude Ranch. It includes 
-- queries to track guest reservations, manage cabin availability, and analyze 
-- vacation packages and activities to support operational and business decisions.
-- ============================================================

-- ============================
-- Query 1: Guest Arrival Dates for June and July 2018
-- Business Purpose: 
-- Identify guest arrivals during peak summer months to optimize staff and resource planning.
-- ============================
SELECT 
    UPPER(LEFT(GLASTNAME, 1)) + LOWER(SUBSTRING(GLASTNAME, 2, LEN(GLASTNAME))) + ', ' + 
    UPPER(LEFT(GFIRSTNAME, 1)) + LOWER(SUBSTRING(GFIRSTNAME, 2, LEN(GFIRSTNAME))) AS Guest,
    FORMAT(ARRIVAL_DATE, 'MMMM d, yyyy') AS [Arrival Date]
FROM 
    guestWH g 
    INNER JOIN reservationWH r ON g.RNUM = r.RNUM
WHERE 
    MONTH(ARRIVAL_DATE) IN (6, 7) 
    AND YEAR(ARRIVAL_DATE) = 2018
ORDER BY 
    ARRIVAL_DATE;

-- ============================
-- Query 2: List Available Cabins
-- Business Purpose: 
-- Identify unreserved cabins to improve booking availability and maximize occupancy.
-- ============================
SELECT 
    CNAME AS [Available Cabins]
FROM 
    cabinWH
WHERE 
    C_ID NOT IN (SELECT C_ID FROM reserved_cabinWH)
ORDER BY 
    CNAME;

-- ============================
-- Query 3: List Packages with 4 or More Activities
-- Business Purpose: 
-- Highlight packages with multiple activities for marketing to attract more bookings.
-- ============================
SELECT 
    p.PNAME AS [Packages with most activities], 
    COUNT(A_ID) AS Number
FROM 
    packageWH p 
    INNER JOIN package_activityWH pa ON p.P_ID = pa.P_ID
GROUP BY 
    p.PNAME
HAVING 
    COUNT(A_ID) >= 4
ORDER BY 
    Number DESC;

-- ============================
-- Query 4: Calculate Total Cost for Reservations Exceeding $2,000
-- Business Purpose: 
-- Identify high-value customers for targeted offers and loyalty programs.
-- ============================
SELECT 
    RIGHT(g.RNUM, 2) AS [Reservation], 
    p.PNAME AS [Package Name], 
    FORMAT((COUNT(g.RNUM) * p.COSTPERSON), 'C0') AS [Total Cost]
FROM 
    reservationWH r 
    INNER JOIN packageWH p ON r.P_ID = p.P_ID
    INNER JOIN guestWH g ON g.RNUM = r.RNUM
GROUP BY 
    g.RNUM, p.COSTPERSON, p.PNAME
HAVING 
    (COUNT(g.RNUM) * p.COSTPERSON) > 2000
ORDER BY 
    g.RNUM;

-- ============================
-- Query 5: Find Cabins with Higher Capacity Than Average
-- Business Purpose: 
-- Identify cabins that can accommodate more guests than the average to assist in large group bookings.
-- ============================
SELECT 
    CNAME AS [Cabin Name], 
    NUMACCOM AS [Can Accommodate]
FROM 
    cabinWH AS c
WHERE 
    NUMACCOM > (SELECT AVG(NUMACCOM) FROM cabinWH AS ca WHERE c.CTYPE = ca.CTYPE)
ORDER BY 
    [Cabin Name] DESC;

-- ============================
-- Query 6: Create a View to Calculate Revenue by Package
-- Business Purpose: 
-- Track total revenue generated by each package to evaluate financial performance.
-- ============================
CREATE VIEW vw_PackageRevenue AS
SELECT 
    PNAME AS [Package Name], 
    COUNT(PNAME) * p.COSTPERSON AS [Total Revenue]
FROM 
    reservationWH r 
    INNER JOIN packageWH p ON r.P_ID = p.P_ID
    INNER JOIN guestWH g ON g.RNUM = r.RNUM
GROUP BY 
    PNAME, COSTPERSON;

-- Query to retrieve data from the view
SELECT * FROM vw_PackageRevenue;

-- ============================
-- Query 7: Stored Procedure to Retrieve Cabin Inventory Based on Type
-- Business Purpose: 
-- Retrieve cabin availability by type to assist with specific guest preferences.
-- ============================
CREATE PROC sp_CabinInventory @Type CHAR(10)
AS
SELECT 
    CTYPE, 
    CNAME, 
    NUMACCOM, 
    r.RNUM, 
    ARRIVAL_DATE, 
    COUNT(g.RNUM) AS [NumOfGuest]
FROM 
    cabinWH c 
    INNER JOIN reserved_cabinWH r ON c.C_ID = r.C_ID
    INNER JOIN reservationWH rv ON rv.RNUM = r.RNUM
    INNER JOIN guestWH g ON rv.RNUM = g.RNUM
WHERE 
    CTYPE = @Type
GROUP BY 
    g.RNUM, CTYPE, CNAME, NUMACCOM, r.RNUM, ARRIVAL_DATE
ORDER BY 
    NUMACCOM DESC;
RETURN;

-- Example of executing the stored procedure for cabin type 'Stone'
EXEC sp_CabinInventory 'Stone';

-- ============================
-- Query 8: Guest Arrival and Departure Dates for Packages Lasting 5-7 Days
-- Business Purpose: 
-- Manage guest check-ins and check-outs for packages lasting 5-7 days.
-- ============================
SELECT 
    UPPER(LEFT(GLASTNAME, 1)) + LOWER(SUBSTRING(GLASTNAME, 2, LEN(GLASTNAME))) + ', ' + 
    UPPER(LEFT(GFIRSTNAME, 1)) + LOWER(SUBSTRING(GFIRSTNAME, 2, LEN(GFIRSTNAME))) AS Guest,
    FORMAT(ARRIVAL_DATE, 'dddd MM/dd/yyyy') AS ArrivalDate,
    FORMAT(DATEADD(DAY, NUMDAYS, ARRIVAL_DATE), 'dddd MM/dd/yyyy') AS DepartureDate
FROM 
    guestWH g 
    INNER JOIN reservationWH r ON g.RNUM = r.RNUM
    INNER JOIN packageWH p ON p.P_ID = r.P_ID
WHERE 
    NUMDAYS IN (5, 6, 7)
ORDER BY 
    ARRIVAL_DATE;
